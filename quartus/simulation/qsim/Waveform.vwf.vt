// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/06/2023 20:07:56"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Cofre
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Cofre_vlg_vec_tst();
// constants                                           
// general purpose registers
reg BM;
reg C;
reg CLOCK;
reg CT;
reg ENTER;
reg RESET;
reg [3:0] TeTemp;
// wires                                               
wire [3:0] D0;
wire [3:0] D1;
wire [3:0] D2;
wire [1:0] I;
wire [1:0] M;
wire [3:0] MM0;
wire [3:0] MM1;
wire [3:0] MM2;
wire [6:0] N0;
wire [6:0] N1;
wire [6:0] N2;
wire [6:0] N3;
wire PENTER;
wire S;
wire SINAL_CORRETA;

// assign statements (if any)                          
Cofre i1 (
// port map - connection between master ports and signals/registers   
	.BM(BM),
	.C(C),
	.CLOCK(CLOCK),
	.CT(CT),
	.D0(D0),
	.D1(D1),
	.D2(D2),
	.ENTER(ENTER),
	.I(I),
	.M(M),
	.MM0(MM0),
	.MM1(MM1),
	.MM2(MM2),
	.N0(N0),
	.N1(N1),
	.N2(N2),
	.N3(N3),
	.PENTER(PENTER),
	.RESET(RESET),
	.S(S),
	.SINAL_CORRETA(SINAL_CORRETA),
	.TeTemp(TeTemp)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK
always
begin
	CLOCK = 1'b0;
	CLOCK = #100 1'b1;
	#100;
end 

// BM
initial
begin
	BM = 1'b0;
	BM = #110000 1'b1;
	BM = #20000 1'b0;
end 

// C
initial
begin
	C = 1'b0;
	C = #20000 1'b1;
	C = #10000 1'b0;
	C = #270000 1'b1;
	C = #20000 1'b0;
	C = #180000 1'b1;
	C = #10000 1'b0;
end 

// CT
initial
begin
	CT = 1'b1;
	CT = #50000 1'b0;
	CT = #40000 1'b1;
	CT = #490000 1'b0;
	CT = #50000 1'b1;
end 

// ENTER
initial
begin
	ENTER = 1'b0;
	ENTER = #150000 1'b1;
	ENTER = #10000 1'b0;
	ENTER = #40000 1'b1;
	ENTER = #20000 1'b0;
	ENTER = #30000 1'b1;
	ENTER = #20000 1'b0;
	ENTER = #90000 1'b1;
	ENTER = #20000 1'b0;
	ENTER = #20000 1'b1;
	ENTER = #20000 1'b0;
	ENTER = #40000 1'b1;
	ENTER = #10000 1'b0;
end 

// RESET
initial
begin
	RESET = 1'b0;
end 
// TeTemp[ 3 ]
initial
begin
	TeTemp[3] = 1'b0;
	TeTemp[3] = #190000 1'b1;
	TeTemp[3] = #40000 1'b0;
	TeTemp[3] = #160000 1'b1;
	TeTemp[3] = #40000 1'b0;
end 
// TeTemp[ 2 ]
initial
begin
	TeTemp[2] = 1'b0;
end 
// TeTemp[ 1 ]
initial
begin
	TeTemp[1] = 1'b0;
end 
// TeTemp[ 0 ]
initial
begin
	TeTemp[0] = 1'b0;
	TeTemp[0] = #140000 1'b1;
	TeTemp[0] = #90000 1'b0;
	TeTemp[0] = #120000 1'b1;
	TeTemp[0] = #80000 1'b0;
end 
endmodule

